services:
  db:
    image: postgres:15-alpine
    container_name: grunland_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - grunland_network
 
  redis:
    image: redis:7-alpine
    container_name: grunland_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - grunland_network

  fastapi-app:
    build: .
    container_name: grunland_fastapi
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=docker
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - grunland_network

  pdf-worker:
    build: .
    command: python -m app.services.pdf_worker
    environment:
      - ENVIRONMENT=docker
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./app:/app/app 
    depends_on:
      - db 
      - redis 
    restart: unless-stopped 
    networks:
      - grunland_network 
    deploy:
      replicas: 2
    
  email-worker:
    build: .
    command: python -m app.services.email_worker
    environment:
      - ENVIRONMENT=docker
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./app:/app/app
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - grunland_network
    deploy:
      replicas: 2

  rq-dashboard:
    image: eoranged/rq-dashboard
    container_name: grunland_rq_dashboard
    ports:
      - "9181:9181"
    environment:
      - RQ_DASHBOARD_REDIS_URL=redis://redis:6379
    depends_on:
      - redis 
    networks:
      - grunland_network

  prometheus:
    image: prom/prometheus:latest
    container_name: grunland_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - grunland_network

  grafana:
    image: grafana/grafana:latest
    container_name: grunland_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - grunland_network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: grunland_node_exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - grunland_network

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: grunland_redis_exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - grunland_network

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: grunland_postgres_exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - grunland_network
  
volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  grunland_network:
    driver: bridge