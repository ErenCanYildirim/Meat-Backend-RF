services:
  db:
    image: postgres:15-alpine
    container_name: grunland_postgres
    environment:
      POSTGRES_DB: grunland_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: alphabet
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - grunland_network
 
  redis:
    image: redis:7-alpine
    container_name: grunland_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - grunland_network

  fastapi-app:
    build: .
    container_name: grunland_fastapi
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=docker
      - DATABASE_URL=postgresql://admin:alphabet@db:5432/grunland_db
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./app:/app/app
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - grunland_network

  worker:
    build: .
    container_name: grunland_worker
    command: python -m app.services.worker
    environment:
      - ENVIRONMENT=docker
      - DATABASE_URL=postgresql://admin:alphabet@db:5432/grunland_db
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./app:/app/app
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - grunland_network

  rq-dashboard:
    image: eoranged/rq-dashboard
    container_name: grunland_rq_dashboard
    ports:
      - "9181:9181"
    environment:
      - RQ_DASHBOARD_REDIS_URL=redis://redis:6379
    depends_on:
      - redis 
    networks:
      - grunland_network
      
volumes:
  postgres_data:

networks:
  grunland_network:
    driver: bridge